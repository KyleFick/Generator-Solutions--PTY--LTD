{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/nanosec/WebstormProjects/Generator-Solutions--PTY--LTD/app/api/contact/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport nodemailer from \"nodemailer\";\n\nexport async function POST(req: Request) {\n  const { name, email, service, message } = await req.json();\n  const html = `\n  <div style=\"font-family: Arial, sans-serif; font-size: 16px; color: #333; max-width: 600px; margin: auto; padding: 20px; border: 1px solid #e0e0e0; border-radius: 8px;\">\n    <h2 style=\"color: #2a2a2a; margin-bottom: 16px;\">Quote Request For: ${service}</h2>\n    \n    <p><strong>Name:</strong> ${name}</p>\n    <p><strong>Email:</strong> <a href=\"mailto:${email}\" style=\"color: #007BFF;\">${email}</a></p>\n    <p><strong>Service: ${service}</strong></p>\n    <p><strong>Message:</strong></p>\n    <div style=\"background-color: #f9f9f9; padding: 12px; border-left: 4px solid #007BFF; white-space: pre-wrap;\">\n      ${message}\n    </div>\n\n    <hr style=\"margin: 30px 0; border: none; border-top: 1px solid #ddd;\" />\n\n    <p style=\"font-size: 14px; color: #999;\">This message was sent from the contact form on your website.</p>\n  </div>\n`;\n\n\n  if (!name || !email || !service || !message) {\n    return NextResponse.json({ error: \"Missing fields\" }, { status: 400 });\n  }\n\n  // Configure your mail server (use environment variables in production)\n  // const transporter = nodemailer.createTransport({\n  //   host: process.env.SMTP_HOST,\n  //   port: parseInt(process.env.SMTP_PORT || \"465\"),\n  //   secure: process.env.SMTP_PORT === \"465\", // true for port 465\n  //   auth: {\n  //     user: process.env.SMTP_USER,\n  //     pass: process.env.SMTP_PASS,\n  //   },\n  // });\n\n  const transporter = nodemailer.createTransport({\n    host: process.env.SMTP_HOST,\n    port: parseInt(process.env.SMTP_PORT || \"587\"),\n    secure: false, // Mailtrap uses TLS, not SSL\n    auth: {\n      user: process.env.SMTP_USER,\n      pass: process.env.SMTP_PASS,\n    },\n  });\n\n\n\n  try {\n    await transporter.sendMail({\n      from: `\"Website Contact\" <${process.env.SMTP_USER}>`,\n      to: process.env.SMTP_RECEIVER || process.env.SMTP_USER,\n      subject: `New Contact Form Submission from ${name}`,\n      html,\n    });\n\n    return NextResponse.json({ message: \"Email sent successfully\" });\n  } catch (error) {\n    console.error(\"Email error:\", error);\n    return NextResponse.json({ error: \"Failed to send email\" }, { status: 500 });\n  }\n}\n\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,MAAM,IAAI,IAAI;IACxD,MAAM,OAAO,CAAC;;wEAEwD,EAAE,QAAQ;;8BAEpD,EAAE,KAAK;+CACU,EAAE,MAAM,0BAA0B,EAAE,MAAM;wBACjE,EAAE,QAAQ;;;MAG5B,EAAE,QAAQ;;;;;;;AAOhB,CAAC;IAGC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAiB,GAAG;YAAE,QAAQ;QAAI;IACtE;IAEA,uEAAuE;IACvE,mDAAmD;IACnD,iCAAiC;IACjC,oDAAoD;IACpD,kEAAkE;IAClE,YAAY;IACZ,mCAAmC;IACnC,mCAAmC;IACnC,OAAO;IACP,MAAM;IAEN,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;QAC7C,MAAM,QAAQ,GAAG,CAAC,SAAS;QAC3B,MAAM,SAAS,QAAQ,GAAG,CAAC,SAAS,IAAI;QACxC,QAAQ;QACR,MAAM;YACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;QAC7B;IACF;IAIA,IAAI;QACF,MAAM,YAAY,QAAQ,CAAC;YACzB,MAAM,CAAC,mBAAmB,EAAE,QAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACpD,IAAI,QAAQ,GAAG,CAAC,aAAa,IAAI,QAAQ,GAAG,CAAC,SAAS;YACtD,SAAS,CAAC,iCAAiC,EAAE,MAAM;YACnD;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA0B;IAChE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC5E;AACF","debugId":null}}]
}